apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim  #name for identifying the storage data
  labels:
    app: mysql
    tier: database

spec:
  accessModes:
    - ReadWriteOnce #mode of claim trying to create

  resources:
    requests:
      storage: 1Gi # tells k8s how much spacer are trying to claim

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database

spec:
  selector:
    matchLabels:
      app: mysql
      tier: database

  strategy:
    type: Recreate

  template:
    metadata:
      labels: #must match service and deployment
        app: mysql
        tier: database

    spec:
      containers:
        - image: mysql:5.7
          args:
            - "--ignore-db-dir=lost+found"

          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root

            - name: MYSQL_DATABASE
              value: order

          ports:
            - containerPort: 3306
              name: mysql

          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql

      volumes:
        - name: mysql-persistent-storage

          persistentVolumeClaim:
            claimName: mysql-pv-claim

---

# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql  # DNS name
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:       # mysql Pod Should contain same labels
    app: mysql
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant